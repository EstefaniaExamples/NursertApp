service: nursery-backend

frameworkVersion: '3'

plugins:
  - serverless-esbuild
  - serverless-plugin-canary-deployments
  - serverless-plugin-log-retention
  - serverless-plugin-aws-alerts
  - ./ci/plugins/technical-config.js

provider:
  name: aws
  deploymentMethod: direct
  runtime: nodejs18.x
  architecture: arm64
  region: ${env:REGION, 'eu-west-2'}
  tracing:
    apiGateway: true
    lambda: true
  stage: ${opt:stage} 
  tags: &tags
    "user": "nursery-backend-aws"
    "owner": "estefania-castro"
  stackTags: *tags
  logs:
    restApi:
      format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller": "$context.identity.caller", "httpMethod": "$context.httpMethod" }'
      level: INFO
      fullExecutionData: false

custom:
  alerts:
    dashboards: true
  deploymentSettings:
    type: Canary10Percent5Minutes
    alias: Live
    alarm: postHookOkHooAlarmAlarm
    provisionedConcurrency: 0
    stages:
      - dev
      - pro
  esbuild:
    bundle: true
    minify: true
    target: node18
    define:
      process.env.NODE_ENV: '"production"'
    sourcemap: true

resources:
  Resources: 
    GatewayResponseApiConfigurationError: 
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties: 
        RestApiId: 
          Ref: 'ApiGatewayRestApi'
        ResponseType: API_CONFIGURATION_ERROR
        ResponseTemplates:
          application/json: "{\"error\":\"bad_request_system_2\",\"error_description\":$context.error.messageString}"

package: 
  individually: true
  patterns:
    - config/**/*
    - '!node_modules'

functions:
  hello:
    handler: src/functions/handler.hello
    description: 'Hello testing'
    deploymentSettings:
      provisionedConcurrency: 0
      postTrafficHook: postHookOk
    logRetentionInDays: 7
    events:
      - http:
          method: GET
          path: /hello

  hello2:
    handler: src/functions/handler2.hello2
    description: 'Hello 2 testing'
    deploymentSettings:
      provisionedConcurrency: 0
      postTrafficHook: postHookOk
    logRetentionInDays: 7
    events:
      - http:
          method: GET
          path: /hello2

  postHookOk:
    handler: src/functions/hooks.postOk
    logRetentionInDays: 7
    alarms:
      - name: hookAlarm
        namespace: 'AWS/Lambda'
        metric: Errors
        threshold: 1
        statistic: Minimum
        period: 60
        evaluationPeriods: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
  
  postHookKo:
    handler: src/functions/hooks.postKo
    logRetentionInDays: 7